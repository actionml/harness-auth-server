version: 2
jobs:
  build:
    docker:
    - image: actionml/harness-sdk:0.1
      entrypoint: /entrypoint.sh
    environment:
      - SDK_VERBOSE: true
      - JVM_OPTS: -Xms512m -Xmx3584m -Xss2m
    steps:
    - checkout
    - restore_cache:
        keys:
        - auth-{{ checksum "build.sbt" }}
    - run:
        name: Build environment details
        command: /details.sh
    - run:
        name: Build Harness Auth Server
        command: make build
    - save_cache:
        key: auth-{{ checksum "build.sbt" }}
        paths:
        - /root/.sbt
        - /root/.ivy2
    - persist_to_workspace:
        root: /root/project/dist
        paths:
        - ./
  publish:
    docker:
    - image: docker:stable
    environment:
      SHELL_ENV: /etc/profile
    steps:
    - checkout
    - setup_remote_docker
    - attach_workspace:
        at: /root/project/dist
    - run:
        name: Install Docker Compose
        command: |
          set -x
          chmod +x docker/config-dependencies.sh
          ./docker/config-dependencies.sh
    - run:
        name: Docker login
        command: |
          echo -n ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
    - run:
        name: Build docker image
        command: |
          echo 'export SHORT_GIT_HASH=$(echo $CIRCLE_SHA1 | cut -c -7)' >> $SHELL_ENV
          echo 'export DATE_BUILD=$(date +'%Y-%m-%d')' >> $SHELL_ENV
          source $SHELL_ENV
          echo "SHORT_GIT_HASH $SHORT_GIT_HASH"
          echo "DATE_BUILD $DATE_BUILD"
          docker image build -f docker/Dockerfile --build-arg version=ci --build-arg GIT_HASH=$SHORT_GIT_HASH --build-arg DATE_BUILD=$DATE_BUILD --build-arg BRANCH=${CIRCLE_BRANCH} -t actionml/auth-server:latest ./
    - run:
        name: Publish docker image
        command: |
          # TODO: remove this line if/when image test enabled.
          echo "export RESULT=0" >> $SHELL_ENV

          source $SHELL_ENV
          echo "Result is ${RESULT}"
          if [ $RESULT -eq 0 ]
          then
            case "${CIRCLE_BRANCH}" in
              "master")
                docker image push actionml/auth-server:latest
              ;;
              develop|devops)
                BRANCH=`echo "${CIRCLE_BRANCH}" | sed s/'\/'/-/g`
                docker tag actionml/auth-server:latest actionml/auth-server:$BRANCH
                docker image push actionml/auth-server:$BRANCH
                docker tag actionml/auth-server:latest actionml/auth-server:$BRANCH-$SHORT_GIT_HASH
                docker image push actionml/auth-server:$BRANCH-$SHORT_GIT_HASH
                docker tag actionml/auth-server:latest actionml/auth-server:$BRANCH-$DATE_BUILD
                docker image push actionml/auth-server:$BRANCH-$DATE_BUILD
              ;;
              *)
              ;;
            esac
          fi
workflows:
  version: 2
  default:
    jobs:
    - build
    - publish:
        requires:
        - build